# Copyright 2021 Canonical Ltd.
# See LICENSE file for licensing details.
name: grafana-k8s
assumes:
  - k8s-api
summary: Data visualization and observability with Grafana

website: https://charmhub.io/grafana-k8s
source: https://github.com/canonical/grafana-k8s-operator
issues: https://github.com/canonical/grafana-k8s-operator/issues
docs: https://discourse.charmhub.io/t/grafana-operator-k8s-docs-index/5612

description: |
  Grafana provides dashboards for monitoring data and this
  charm is written to allow for HA on Kubernetes and can take
  multiple data sources (for example, Prometheus).

containers:
  grafana:
    resource: grafana-image
    mounts:
      - storage: database
        location: /var/lib/grafana
  litestream:
    resource: litestream-image
    mounts:
      - storage: database
        location: /var/lib/grafana
storage:
  database:
    type: filesystem

requires:
  grafana-source:
    interface: grafana_datasource
  grafana-dashboard:
    interface: grafana_dashboard
  grafana-auth:
    interface: grafana_auth
  database:
    interface: db
    limit: 1
  catalogue:
    interface: catalogue
  ingress:
    interface: traefik_route
    limit: 1
    description: Grafana needs "ingress per leader" (not per app and not per unit).
  certificates:
    interface: tls-certificates
    limit: 1
    description: Certificate and key files for Grafana to use with TLS.
  receive-ca-cert:
    interface: certificate_transfer
    description: |
      Receive a CA cert for grafana to trust.
      This relation can be used with a local CA to obtain the CA cert that was used to sign proxied
      endpoints.
    limit: 1
  oauth:
    interface: oauth
    limit: 1
    description: |
      Receive oauth server's info and a set of client credentials.
      This relation can be used to integrate grafana with an oAuth2/OIDC Provider.
  tracing:
    interface: tracing
    limit: 1

provides:
  metrics-endpoint:
    interface: prometheus_scrape
    description: Links to grafana's own `/metrics` endpoint.

peers:
  grafana:
    interface: grafana_peers
  # Peer relation used as storage for TLS data
  replicas:
    interface: grafana_replicas

resources:
  grafana-image:
    type: oci-image
    description: upstream docker image for Grafana
    #upstream-source: ghcr.io/canonical/grafana:dev
    upstream-source: docker.io/ubuntu/grafana:9-22.04
  litestream-image:
    type: oci-image
    description: upstream image for sqlite streaming
    upstream-source: docker.io/litestream/litestream:0.4.0-beta.2
