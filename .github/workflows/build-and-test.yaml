name: Build/Test

on:
  workflow_call:
    secrets:
      CHARMHUB_TOKEN:
        required: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3
      - name: Install dependencies
        run: python3 -m pip install tox
      - name: Run linters
        run: tox -e lint

  unit-test:
    name: Unit tests
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3
      - name: Install dependencies
        run: python -m pip install tox
      - name: Run tests
        run: tox -e unit

  integration-test:
    name: Integration tests (microk8s)
    runs-on: ubuntu-22.04
    needs:
      - lint
      - unit-test
    steps:
      - name: Set up docker qemu
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Checkout local
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3
        with:
          path: charm
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Checkout test pebble Juju
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3
        with:
          repository: juju/juju
          path: juju
          ref: 57aa8e8b0a37eae47002665d378c0c37ff026ce3
      - name: run killsnoop
        uses: JarvusInnovations/background-action@v1
        with:
          run: |
            sudo apt-get update && sudo apt-get -y install bpfcc-tools python3-psutil && ls && sudo python3 ${GITHUB_WORKSPACE}/charm/src/killsnoop.py &
          wait-on: |
            file:///tmp/compiled
          tail: true
          log-output-resume: stderr
          wait-for: 10m
          log-output: stderr,stdout # same as true
          log-output-if: true
          working-directory: /tmp
      - name: Setup operator environment
        run: |
          sudo snap install juju --channel=3.1/stable
          sudo snap install microk8s --channel=1.26-strict/stable
          sudo usermod -a -G snap_microk8s $(whoami)
          sudo microk8s.enable dns storage registry
          sg snap_microk8s -c "microk8s status --wait-ready"
      - name: Enable auditing
        run: |
            sudo microk8s stop
            mkdir ${GITHUB_WORKSPACE}/{overlay,work}
            sudo mount -t overlay overlay -o lowerdir=/snap/microk8s/current,upperdir=${GITHUB_WORKSPACE}/overlay,workdir=${GITHUB_WORKSPACE}/work /snap/microk8s/current
            sudo cp ${GITHUB_WORKSPACE}/charm/audit-policy.yaml /snap/microk8s/current/
            echo "--audit-policy-file=/snap/microk8s/current/audit-policy.yaml" | sudo tee -a /snap/microk8s/current/default-args/kube-apiserver
            echo "--audit-log-path=${GITHUB_WORKSPACE}/audit.log" | sudo tee -a /snap/microk8s/current/default-args/kube-apiserver
            sudo cat /snap/microk8s/current/default-args/kube-apiserver
            sudo cat /snap/microk8s/current/audit-policy.yaml
            touch ${GITHUB_WORKSPACE}/audit.log
            chmod 777 ${GITHUB_WORKSPACE}/audit.log
            sudo microk8s start
            sudo snap install charmcraft --classic
            sudo usermod -a -G lxd $(whoami)
            sudo lxd init --auto
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: '>=1.19.0'
      - name: Build operator-agent
        run: |
          cd ${GITHUB_WORKSPACE}/juju
          go mod vendor
          sg snap_microk8s -c make microk8s-operator-update
      - name: Re-provision Juju
        run: |
          sg snap_microk8s -c "juju bootstrap microk8s micro --agent-version=3.1.1" && sleep 10
      - name: Run integration tests
        run: |
          cd ${GITHUB_WORKSPACE}/charm
          python3 -m venv venv
          source venv/bin/activate
          pip install tox
          sg lxd -c charmcraft pack --verbosity=trace
          sg lxd -c tox -e integration
      - name: View audit log
        if: always()
        run: |
          cat ${GITHUB_WORKSPACE}/audit.log
